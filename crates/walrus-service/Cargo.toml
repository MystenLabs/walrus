[package]
name = "walrus-service"
publish = false
authors.workspace = true
version.workspace = true
edition.workspace = true
license.workspace = true

[features]
default = ["test-utils"]
test-utils = ["dep:tempfile", "dep:walrus-test-utils", "walrus-core/test-utils"]

[dependencies]
anyhow.workspace = true
async-trait = "0.1.81"
axum = { version = "0.7.5", features = ["http2"] }
bcs.workspace = true
clap = { workspace = true, features = ["string"] }
colored = "2.1.0"
enum_dispatch.workspace = true
fastcrypto.workspace = true
futures.workspace = true
git-version = "0.3.9"
home = "0.5.9"
humantime = "2.1.0"
indoc = "2.0.5"
mime.workspace = true
mysten-metrics.workspace = true
opentelemetry.workspace = true
opentelemetry-http.workspace = true
opentelemetry-otlp.workspace = true
opentelemetry-stdout = { version = "0.4.0", features = ["trace"] }
opentelemetry_sdk = { workspace = true, features = ["trace", "rt-tokio", "rt-tokio-current-thread"] }
pin-project = "1.1.5"
prettytable = "0.10.0"
prometheus.workspace = true
rand.workspace = true
regex = "1"
reqwest.workspace = true
rocksdb.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
serde_yaml.workspace = true
sui-sdk.workspace = true
sui-types.workspace = true
telemetry-subscribers.workspace = true
tempfile = { workspace = true, optional = true }
thiserror.workspace = true
tokio = { workspace = true, features = ["rt-multi-thread", "macros"] }
tokio-stream.workspace = true
tokio-util.workspace = true
tower-http = { version = "0.5.2", features = ["trace"] }
tracing.workspace = true
tracing-opentelemetry.workspace = true
tracing-subscriber.workspace = true
typed-store.workspace = true
utoipa = { workspace = true, features = ["axum_extras"] }
utoipa-redoc = { version = "4.0.0", features = ["axum"] }
walrus-core = { workspace = true, features = ["utoipa"] }
walrus-sdk.workspace = true
walrus-sui = { workspace = true, features = ["utoipa"] }
walrus-test-utils = { workspace = true, optional = true }

[lints]
workspace = true

[[bin]]
name = "walrus"
path = "bin/client.rs"

[[bin]]
name = "walrus-node"
path = "bin/node.rs"

[dev-dependencies]
mockall = "0.12.1"
rand.workspace = true
tempfile.workspace = true
walrus-core = { workspace = true, features = ["test-utils"] }
walrus-test-utils.workspace = true

[target.'cfg(msim)'.dependencies]
sui-simulator.workspace = true
