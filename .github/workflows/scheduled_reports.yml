name: Weekly reports

on:
  # Run workflow once a week on Sundays.
  schedule:
    - cron: "14 3 * * 0"
  # Run workflow on demand.
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CLICOLOR_FORCE: 1
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short
  RUSTDOCFLAGS: -D warnings
  SUI_TAG: testnet-v1.32.0

jobs:
  test-coverage:
    name: Run all Rust tests and report coverage
    runs-on: ubuntu-ghcloud
    env:
      RUSTC_BOOTSTRAP: 1
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run_tarpaulin

  simtests:
    name: Run all simtests
    runs-on: ubuntu-ghcloud
    steps:
      - uses: taiki-e/install-action@v2.42.37
        with:
          tool: cargo-nextest
      - uses: actions/checkout@v4
      - run: ./scripts/simtest/install.sh
      - run: cargo simtest --run-ignored all simtest

  dependencies:
    name: Check dependencies (including vulnerabilities)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2.0.1
