name: Lint

on: [pull_request]

permissions:
  contents: read

jobs:
  pr-title:
    runs-on: ubuntu-latest
    name: Check PR title format
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5.5.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  formatting:
    runs-on: ubuntu-latest
    name: Check formatting
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: '3.x'

      - name: Install and run editorconfig-checker
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install editorconfig-checker=="2.7.3"
          ec

      - name: Install taplo
        run: |
          url="https://github.com/tamasfe/taplo/releases/download/0.9.3/taplo-linux-x86_64.gz"
          curl -sSL "$url" | gunzip > taplo
          chmod +x taplo
      - name: Check formatting of all TOML files
        run: ./taplo format --check

      - name: Install yamlfmt
        run: |
          url="https://github.com/google/yamlfmt/releases/download/v0.14.0/yamlfmt_0.14.0_Linux_x86_64.tar.gz"
          curl -sSL "$url" | tar xvz yamlfmt
      - name: Check formatting of all YAML files
        run: ./yamlfmt -lint

  move-formatting:
    name: Check Move formatting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./contracts
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
      - run: npm install @mysten/prettier-plugin-move@0.2.2
      - run: npx prettier-move -c **/*.move

  typos:
    runs-on: ubuntu-latest
    name: Check spelling
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@v1.30.1

  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run ShellCheck
        run: find . -type f -name "*.sh" -exec shellcheck --severity=error {} +

  license-headers:
    runs-on: ubuntu-latest
    name: Check license headers
    steps:
      - uses: actions/checkout@v4
      - run: cargo install licensesnip
      - run: licensesnip check

  check-all:
    name: Check if all lint jobs succeeded
    if: always()
    needs:
      - pr-title
      - formatting
      - move-formatting
      - typos
      - license-headers
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether all needed jobs succeeded
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
