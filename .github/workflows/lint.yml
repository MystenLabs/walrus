name: Lint

on: [pull_request]

permissions:
  contents: read

jobs:
  pr-title:
    runs-on: ubuntu-latest
    name: Check PR title format
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v4
        with:
          fetch-depth: 0
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@48f256284bd46cdaab1048c3721360e808335d50 # pin@v6.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  formatting:
    runs-on: ubuntu-latest
    name: Check formatting
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v4
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # pin@v6.0.0
        with:
          python-version: "3.x"

      - name: Install and run editorconfig-checker
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install editorconfig-checker=="2.7.3"
          ec

      - name: Install taplo
        run: |
          url="https://github.com/tamasfe/taplo/releases/download/0.9.3/taplo-linux-x86_64.gz"
          curl -sSL "$url" | gunzip > taplo
          chmod +x taplo
      - name: Check formatting of all TOML files
        run: ./taplo format --check

      - name: Check for leftover crumbs
        run: |
          count_of_crumbs="$(git grep crumb! | grep -Ev -e '^crates/walrus-utils/src/lib.rs' -e '^\.github/workflows/lint.yml' | wc -l)"
          test "$count_of_crumbs" -eq 0

      - name: Install yamlfmt
        run: |
          url="https://github.com/google/yamlfmt/releases/download/v0.17.0/yamlfmt_0.17.0_Linux_x86_64.tar.gz"
          curl -sSL "$url" | tar xvz yamlfmt
      - name: Check formatting of all YAML files
        run: ./yamlfmt -lint

      - name: Lint all markdown files
        uses: DavidAnson/markdownlint-cli2-action@992badcdf24e3b8eb7e87ff9287fe931bcb00c6e # pin@v20.0.0
        with:
          config: .markdownlint-cli2.yaml
          # Note: Keep globs in sync with .markdownlint-cli2.yaml.
          globs: "docs/book/**/*.md README.md CONTRIBUTING.md"

  move-formatting:
    name: Check Move formatting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./contracts
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v4
      - name: Use Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # pin@v4
      - run: npm install @mysten/prettier-plugin-move@0.3.0
      - run: npx prettier-move -c **/*.move

  typos:
    runs-on: ubuntu-latest
    name: Check spelling
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v4
      - uses: crate-ci/typos@40156d6074bf731adb169cfb8234954971dbc487 # pin@v1.37.1

  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v4
      - name: Run ShellCheck
        run: find . -type f -name "*.sh" -exec shellcheck --severity=error {} +

  license-headers:
    runs-on: ubuntu-latest
    name: Check license headers
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v4
      - name: Install licensesnip
        uses: taiki-e/install-action@970d55e3ce02a46d60ffae7b4fab3dedace6e769 # pin@v2.49.13
        with:
          tool: licensesnip@1.7.0
      - run: licensesnip check

  check-all:
    name: Check if all lint jobs succeeded
    if: always()
    needs:
      - pr-title
      - formatting
      - move-formatting
      - typos
      - license-headers
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether all needed jobs succeeded
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # pin@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
